import java.util.*;

public class fractionalKnapsack{
    private static class Pair {
        int value;
        int weight;

        public Pair(int v, int w) {
            value = v;
            weight = w;
        }
    }

    public static int fractionalKnapsack(List<Pair> list, int w) {
        int sum = 0;
        Collections.sort(list, new Comparator<Pair>() {
            @Override
            public int compare(Pair a, Pair b) {
                return b.value / b.weight - a.value / a.weight;
            }
        });
        for (int i = 0; i < list.size() && w > 0; i++) {
            if (list.get(i).weight <= w) {
                sum += list.get(i).value;
                w -= list.get(i).weight;
            } else {
                sum += list.get(i).value * w / list.get(i).weight;
                w = 0;
            }
        }
        return sum;
    }

    public static void main(String[] args) {
        int w = 60;
        Pair a = new Pair(30, 5);
        Pair b = new Pair(20, 10);
        Pair c = new Pair(100, 20);
        Pair d = new Pair(90, 30);
        Pair e = new Pair(160, 40);
        List<Pair> list = new LinkedList<>();
        list.add(a);
        list.add(b);
        list.add(c);
        list.add(d);
        list.add(e);
        System.out.println(fractionalKnapsack(list, w));
    }
}